#!/bin/bash

# references:
# - https://superuser.com/questions/1075956/homebrew-installed-sleepwatcher-wanted-to-run-suggested-service-command-got
# - https://formulae.brew.sh/formula/sleepwatcher
# - http://hints.macworld.com/article.php?story=20080329201951648
# - https://stackoverflow.com/questions/2049758/is-there-a-way-to-eject-all-external-hard-drives-from-the-command-line-os-x#7222469

# this is the list of all possible disks which could get unmounted automatically
disks_possibly_unmount=("CloudPull Backup" "Mobile Backups" "Skauti Roztoky Backup" "Tomik Backup" "Tomik Pictures")

all_disks=`osascript -e 'tell application "Finder" to get name of every disk whose ejectable is true'`

#Define multi-character delimiter
delimiter=", "
string=$all_disks$delimiter

#Split the text based on the delimiter
disks=()
while [[ $string ]]; do
    disks+=( "${string%%"$delimiter"*}" )
    string=${string#*"$delimiter"}
done

#Print the words after the split
for disk in "${disks[@]}"; do
    for disk_possibly_unmount in "${disks_possibly_unmount[@]}"; do
        if [ "$disk" = "$disk_possibly_unmount" ]; then
            osascript -e "tell application \"Finder\" to eject \"$disk\""  
            break
        fi
    done
done


#osascript -e 'tell application "Finder" to eject (every disk whose ejectable is true and local volume is true and free space is not equal to 0)'
